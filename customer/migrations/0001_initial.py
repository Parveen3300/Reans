# Generated by Django 3.2.8 on 2021-11-15 05:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '0001_initial'),
        ('configuration', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_full_name', models.CharField(max_length=100, verbose_name='Customer Name')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email Id')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True, verbose_name='Mobile No.')),
                ('mobile_with_isd', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile No. with ISD Code')),
                ('isd', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)], verbose_name='ISD/Country Code')),
                ('gender', models.CharField(blank=True, max_length=20, null=True, verbose_name='Gender')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Customer Code')),
                ('designation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Designation')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_profile_images/', verbose_name='Customer Profile Pic')),
                ('registration_type', models.CharField(choices=[('android', 'Mobile/Android'), ('ios', 'Mobile/iOS'), ('web', 'Web')], max_length=255, verbose_name='Registration Type')),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('imei_no', models.CharField(blank=True, max_length=100, null=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('timezone_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Timezone')),
                ('is_mobile_verified', models.BooleanField(default=0)),
                ('is_company_created', models.BooleanField(default=0)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile_auth_user', to=settings.AUTH_USER_MODEL)),
                ('city', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='state', chained_model_field='state', db_column='city', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_customerprofiles', show_all=True, to='location.citymaster')),
                ('country', models.ForeignKey(blank=True, db_column='country', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_customerprofiles', to='location.countrymaster')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_customerprofiles', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('state', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country', db_column='state', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state_customerprofiles', show_all=True, to='location.statemaster')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_customerprofiles', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Customer Profile',
                'verbose_name_plural': 'Customer Profile',
                'db_table': 'customer_profile',
            },
        ),
        migrations.CreateModel(
            name='CustomerAsCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_company_name', models.CharField(max_length=30, verbose_name='Customers’ Company Name')),
                ('brand', models.CharField(blank=True, max_length=30, null=True)),
                ('isd', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)], verbose_name='ISD/ Country Code')),
                ('contact_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Company’s Mobile No. w/o ISD Code')),
                ('gst_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='GST Number')),
                ('pan_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Pan Card Number')),
                ('aadhaar_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Aadhaar Number')),
                ('mobile_with_isd', models.CharField(blank=True, max_length=20, null=True, verbose_name='Company’s Mobile No. with ISD Code')),
                ('email_id', models.EmailField(blank=True, max_length=70, null=True, verbose_name='Email Id')),
                ('is_existing_cx', models.BooleanField(default=False, verbose_name='Is existing Customer')),
                ('company_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('postcode', models.CharField(blank=True, max_length=64, null=True, verbose_name='ZIP Code')),
                ('latitude', models.CharField(blank=True, max_length=30, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=30, null=True, verbose_name='Longitude')),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, max_length=50, null=True, verbose_name='Website')),
                ('business_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_company_business_type', to='configuration.businesstype', verbose_name='Business Type')),
                ('city', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='state', chained_model_field='state', db_column='city', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_customerascompanys', show_all=True, to='location.citymaster')),
                ('country', models.ForeignKey(blank=True, db_column='country', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_customerascompanys', to='location.countrymaster')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_customerascompanys', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_company_customer', to='customer.customerprofile', verbose_name='Customer Details')),
                ('state', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country', db_column='state', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state_customerascompanys', show_all=True, to='location.statemaster')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_customerascompanys', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Customer As Company',
                'verbose_name_plural': 'Customer As Company',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_address_type', models.CharField(choices=[('billing', 'Billing'), ('shipping', 'Shipping')], max_length=30, verbose_name='Address Type')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('line1', models.CharField(blank=True, max_length=255, null=True)),
                ('line2', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.PositiveIntegerField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('city', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='state', chained_model_field='state', db_column='city', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_customeraddresss', show_all=True, to='location.citymaster')),
                ('country', models.ForeignKey(blank=True, db_column='country', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_customeraddresss', to='location.countrymaster')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_customeraddresss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_address_master', to='customer.customerprofile', verbose_name='Customer Details')),
                ('state', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country', db_column='state', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state_customeraddresss', show_all=True, to='location.statemaster')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_customeraddresss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Customer Address',
                'verbose_name_plural': 'Customer Address',
            },
        ),
    ]
